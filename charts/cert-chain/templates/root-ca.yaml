{{- if (.Values.issuers.selfsigned).enabled }}
{{- $selfsignedIssuerType := .Values.issuers.selfsigned.type | default "Issuer" }}
{{- $selfsignedNamespace := .Values.issuers.selfsigned.namespace | default .Release.Namespace }}
{{- $rootIssuerType := .Values.issuers.root.type | default "Issuer" }}
{{- $rootNamespace := .Values.issuers.root.namespace | default .Release.Namespace }}
---
# Self-signed Issuer for bootstrapping Root CA
apiVersion: cert-manager.io/v1
kind: {{ $selfsignedIssuerType }}
metadata:
  name: {{ .Values.issuers.selfsigned.name }}
  {{- if eq $selfsignedIssuerType "Issuer" }}
  namespace: {{ $selfsignedNamespace }}
  {{- end }}
spec:
  selfSigned: {}
---
# Root CA Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Values.rootCA.name }}
  namespace: {{ $rootNamespace }}
spec:
  secretName: {{ .Values.rootCA.secretName }}
  duration: {{ .Values.rootCA.duration }}
  renewBefore: {{ .Values.rootCA.renewBefore }}
  subject:
    countries:
      - {{ .Values.rootCA.country }}
    organizations:
      - {{ .Values.rootCA.organization }}
  commonName: {{ .Values.rootCA.commonName }}
  isCA: true
  privateKey:
    algorithm: RSA
    size: 4096
  issuerRef:
    name: {{ .Values.issuers.selfsigned.name }}
    kind: {{ $selfsignedIssuerType }}
    group: cert-manager.io
  {{- $targetNamespace := (.Values.issuers.intermediate).namespace | default .Release.Namespace }}
  {{- if ne $rootNamespace $targetNamespace }}
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "{{ $targetNamespace }}"
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: "{{ $targetNamespace }}"
  {{- end }}
{{- if (.Values.issuers.root).enabled }}
---
# Root CA Issuer for signing Intermediate CA
apiVersion: cert-manager.io/v1
kind: {{ $rootIssuerType }}
metadata:
  name: {{ .Values.issuers.root.name }}
  {{- if eq $rootIssuerType "Issuer" }}
  namespace: {{ $rootNamespace }}
  {{- end }}
spec:
  ca:
    secretName: {{ .Values.rootCA.secretName }}
{{- end }}
{{- end }}
